What is Dumux-eWoms?
====================

eWoms is a “friendly fork” of the Dumux simulation framework [0] for
flow and transport in porous media. It follows a more agile
development model with a lower priority on backward compatibility and
higher openness to disruptive changes. To facilitate distributed
development, eWoms uses git [1] instead of Subversion [2] as its revision
control system.

“eWoms” is an acronym for the German idiom “eierlegende Wollmilchsau”
(egg-laying wool-milk pig) and reflects the fact that the goal of this
project is to create an all-encompassing simulation framework for
flow-and transport in porous media.

Quick, I want to try it!
========================

The short answer:

    git clone git://gitorious.org/ewoms/ewoms.git ewoms

The long answer: To use eWoms, you need the following DUNE modules
(each needs to be version 2.1.1 or newer): dune-common, dune-grid,
dune-localfunctions and dune-istl. You may either download and extract
the tarballs from the DUNE website or check them out from their
Subversion repositories using the following bash script:

    for MOD in common grid localfunctions istl; do
        svn checkout \  
            https://svn.dune-project.org/svn/dune-$MOD/branches/release-2.1 \  
            dune-$MOD  
    done

After you've checked out the required DUNE modules, you need to check
out eWoms using the above command, i.e.

    git clone git://gitorious.org/ewoms/ewoms.git ewoms

Finally, you need to compile everything using:

    ./dune-common/bin/dunecontrol \
        --opts=ewoms/debug.opts \
        --module=ewoms \
        all
    cd ewoms  
    make check

If the build was successful, you will find some test applications in
the sub-folders of ‘test/’. Each of these can be executed by just
punching the name of the executable into the terminal. For the
fully-implicit two-phase example application, this means

cd test/boxmodels/2p
./test_2p  
# Simulation runs

The results can then be visualized using ParaView:

paraview --data=$(ls --sort=time *.pvd | grep -v convergence | head -n 1)

How do I get changes in?
========================

If you want to only occasionally contribute a patch, you may create a
merge request [2, 4] on gitorious. After you've acquired a track
record, we will offer you full push rights.

What is the eWoms release model?
================================

A new release of eWoms is prepared every six months if there are
enough changes to justify a major release. Bug-fix releases are
released ad-hoc with the sole purpose of fixing errors which creeped
into the last major release (i.e. they do not contain any new
features). Each major release drops out of support after two successor
releases, i.e. usually after a year. 

Why are all headers placed within the ‘dumux/’ sub-directory?
=============================================================

As mentioned above, eWoms is a _friendly_ fork of Dumux. Designs which
make porting code to or from the Dumux trunk harder than strictly
necessary without providing sufficient technical benefits will be
avoided for this reason.  

Given the previous answer, why was the Dune module renamed to ‘ewoms’?
======================================================================

Obviously that has been done due to technical benefits ;). The main
reason is to make eWoms and Dumux co-installable as separate Dune
modules. Given the fact that code usually cannot be transferred
between the two frameworks without modifications, this issue should
not pose a big problem for most users. Note though, that due to
colliding file names (see the above question), eWoms and Dumux cannot
(easily) be co-installed on a system-wide basis.

Links
=====

[0] http://www.dumux.org
[1] http://git-scm.com
[2] http://blog.gitorious.org/2009/07/15/new-merge-request-functionality/
[3] https://gitorious.org/dumux-ewoms/dumux-ewoms/merge_requests
