dnl -*- autoconf -*-
# Macros needed to find eWoms and dependent libraries.  They are called by
# the macros in ${top_src_dir}/dependencies.m4, which is generated by
# "dunecontrol autogen"
AC_DEFUN([EWOMS_CHECKS],
[
  AC_CHECK_HEADER([valgrind/memcheck.h], 
                  [HAVE_VALGRIND_H="1"],
                  AC_MSG_WARN([valgrind/memcheck.h not found]))
  AS_IF([test "$HAVE_VALGRIND_H" = "1"],[
    AC_DEFINE(HAVE_VALGRIND, 1, [Define whether the valgrind header files for client requests are present.])
    ])
  if test "$HAVE_VALGRIND_H" == "1"; then
     DUNE_ADD_SUMMARY_ENTRY([Valgrind client requests],["yes"])
  else
     DUNE_ADD_SUMMARY_ENTRY([Valgrind client requests],["no"])
  fi

  # whether the compiler supports the 'auto' keyword
  EWOMS_CHECK_AUTO
  if test "$HAVE_AUTO" != "yes"; then
      AC_MSG_ERROR([To use eWoms you need a compiler which supports the 'auto' keyword (e.g. GCC 4.5 or newer)])
  fi
  # check for the availablility of quadruple precision floating point
  # math and enable it if requested.
  EWOMS_CHECK_QUAD

  # check whether the constexpr keyword is present
  AC_REQUIRE([CONSTEXPR_CHECK])
  # define constexpr as const if it is not available. this is quite a HACK!
  if test "x$HAVE_CONSTEXPR" != "xyes"; then
      AC_DEFINE(constexpr, const, ['set 'constexpr' to 'const' if constexpr is not supported])
  fi
])

# checks only relevant for the eWoms module itself but not for modules
# which depend on it
AC_DEFUN([EWOMS_CHECKS_PRIVATE],
[
  if test "$enable_documentation" == "yes"; then
    AC_PROG_LATEX
    AC_PROG_BIBTEX
    AC_PROG_DVIPDF

    if test "$latex" != "no" && \
     test "$bibtex" != "no" && \
     test "$dvipdf" != "no"; then

     AC_LATEX_CLASS(scrreprt,have_latex_class_scrreprt)

     AC_LATEX_PACKAGE(amsfonts,scrreprt,have_latex_pkg_amsfonts)
     AC_LATEX_PACKAGE(amsmath,scrreprt,have_latex_pkg_amsmath)
     AC_LATEX_PACKAGE(amssymb,scrreprt,have_latex_pkg_amssymb)
     # AC_LATEX_PACKAGE(babel,scrreprt,have_latex_pkg_babel)
     AC_LATEX_PACKAGE(color,scrreprt,have_latex_pkg_color)
     AC_LATEX_PACKAGE(enumerate,scrreprt,have_latex_pkg_enumerate)
     AC_LATEX_PACKAGE(graphics,scrreprt,have_latex_pkg_graphics)
     AC_LATEX_PACKAGE(graphicx,scrreprt,have_latex_pkg_graphicx)
     AC_LATEX_PACKAGE(hyperref,scrreprt,have_latex_pkg_hyperref)
     AC_LATEX_PACKAGE(hyphenat,scrreprt,have_latex_pkg_hyphenat)
     AC_LATEX_PACKAGE(inputenc,scrreprt,have_latex_pkg_inputenc)
     AC_LATEX_PACKAGE(layout,scrreprt,have_latex_pkg_layout)
     AC_LATEX_PACKAGE(listings,scrreprt,have_latex_pkg_listings)
     AC_LATEX_PACKAGE(lscape,scrreprt,have_latex_pkg_lscape)
     AC_LATEX_PACKAGE(makeidx,scrreprt,have_latex_pkg_makeidx)
     AC_LATEX_PACKAGE(pstricks,scrreprt,have_latex_pkg_pstricks)
     AC_LATEX_PACKAGE(rotating,scrreprt,have_latex_pkg_rotating)
     AC_LATEX_PACKAGE(scrpage2,scrreprt,have_latex_pkg_scrpage2)
     AC_LATEX_PACKAGE(subfig,scrreprt,have_latex_pkg_subfig)
     AC_LATEX_PACKAGE(theorem,scrreprt,have_latex_pkg_theorem)
     AC_LATEX_PACKAGE(tabularx,scrreprt,have_latex_pkg_tabularx)
     AC_LATEX_PACKAGE(ulem,scrreprt,have_latex_pkg_ulem)
     AC_LATEX_PACKAGE(units,scrreprt,have_latex_pkg_units)
     AC_LATEX_PACKAGE(xspace,scrreprt,have_latex_pkg_xspace)
    fi
  fi

  # only build the handbook if the documentation is build, latex is
  # available and the tree is checked out via a version control system
  build_handbook=yes
  if test "$enable_documentation" != "yes"; then
     build_handbook="no"
     summary_message="Configure parameter --enable-documentation not specified"
  elif test "$CONVERT" == "no" || test "$CONVERT" == "" ; then
    build_handbook="no"
    summary_message="Command 'convert' not found"
  elif test "$latex" == "no" || test "$latex" == ""; then
    summary_message="Command 'latex' not found"
    build_handbook="no"
  elif test "$bibtex" == "no" || test "$bibtex" == ""; then
    summary_message="Command 'bibtex' not found"
    build_handbook="no"
  elif test "$dvipdf" == "no" || test "$dvipdf" == "" ; then
    summary_message="Command 'dvipdf' not found"
    build_handbook="no"
  elif test "$have_latex_class_scrreprt" != "yes"; then
    summary_message="Latex class 'scrreprt' not available"
    build_handbook="no"
  elif test "$have_latex_pkg_amsfonts" != "yes"; then
    summary_message="Latex package 'amsfonts' not available"
    build_handbook="no"
  elif test "$have_latex_pkg_amsmath" != "yes"; then
    summary_message="Latex package 'amsmath' not available"
    build_handbook="no"
  elif test "$have_latex_pkg_amssymb" != "yes"; then
    summary_message="Latex package 'amssymb' not available"
    build_handbook="no"
  elif test "$have_latex_pkg_color" != "yes"; then
    summary_message="Latex package 'color' not available"
    build_handbook="no"
  elif test "$have_latex_pkg_enumerate" != "yes"; then
    summary_message="Latex package 'enumerate' not available"
    build_handbook="no"
  elif test "$have_latex_pkg_graphics" != "yes"; then
    summary_message="Latex package 'graphics' not available"
    build_handbook="no"
  elif test "$have_latex_pkg_graphicx" != "yes"; then
    summary_message="Latex package 'graphicx' not available"
    build_handbook="no"
  elif test "$have_latex_pkg_hyperref" != "yes"; then
    summary_message="Latex package 'hyperref' not available"
    build_handbook="no"
  elif test "$have_latex_pkg_hyphenat" != "yes"; then
    summary_message="Latex package 'hyphenat' not available"
    build_handbook="no"
  elif test "$have_latex_pkg_inputenc" != "yes"; then
    summary_message="Latex package 'inputenc' not available"
    build_handbook="no"
  elif test "$have_latex_pkg_layout" != "yes"; then
    summary_message="Latex package 'layout' not available"
    build_handbook="no"
  elif test "$have_latex_pkg_listings" != "yes"; then
    summary_message="Latex package 'listings' not available"
    build_handbook="no"
  elif test "$have_latex_pkg_lscape" != "yes"; then
    summary_message="Latex package 'lscape' not available"
    build_handbook="no"
  elif test "$have_latex_pkg_makeidx" != "yes"; then
    summary_message="Latex package 'makeidx' not available"
    build_handbook="no"
  elif test "$have_latex_pkg_pstricks" != "yes"; then
    summary_message="Latex package 'pstricks' not available"
    build_handbook="no"
  elif test "$have_latex_pkg_rotating" != "yes"; then
    summary_message="Latex package 'rotating' not available"
    build_handbook="no"
  elif test "$have_latex_pkg_scrpage2" != "yes"; then
    summary_message="Latex package 'scrpage2' not available"
    build_handbook="no"
  elif test "$have_latex_pkg_subfig" != "yes"; then
    summary_message="Latex package 'subfig' not available"
    build_handbook="no"
  elif test "$have_latex_pkg_theorem" != "yes"; then
    summary_message="Latex package 'theorem' not available"
    build_handbook="no"
  elif test "$have_latex_pkg_tabularx" != "yes"; then
    summary_message="Latex package 'tabularx' not available"
    build_handbook="no"
  elif test "$have_latex_pkg_ulem" != "yes"; then
    summary_message="Latex package 'ulem' not available"
    build_handbook="no"
  elif test "$have_latex_pkg_units" != "yes"; then
    summary_message="Latex package 'units' not available"
    build_handbook="no"
  fi

  AC_SUBST([LATEX],[$latex])
  AC_SUBST([BIBTEX],[$bibtex])
  AC_SUBST([DVIPDF],[$dvipdf])

  AM_CONDITIONAL([BUILD_HANDBOOK], [test "$build_handbook" == "yes"])
  if test "$build_handbook" == "yes"; then
     DUNE_ADD_SUMMARY_ENTRY([Build eWoms handbook],[$build_handbook])
  else
     DUNE_ADD_SUMMARY_ENTRY([Build eWoms handbook],[$build_handbook ($summary_message)])
  fi

  EWOMS_GET_CODENAME(ewoms, .)
])

AC_DEFUN([EWOMS_GET_CODENAME],[
  MODULE_ROOT="$2"

  # retrieve the module codename
  m4_pushdef([__EWOMS_MODULE_NAME], [m4_toupper( m4_translit($1, [-], [_]))])
  __EWOMS_MODULE_NAME[]_CODENAME=["$(grep 'Codename:' $MODULE_ROOT/dune.module | sed -e 's/^Codename: *//;s/ *$//')"] 2>/dev/null
  AC_DEFINE_UNQUOTED(__EWOMS_MODULE_NAME[]_CODENAME, ["$__EWOMS_MODULE_NAME[]_CODENAME"], [The codename of $1])
])

# Additional checks needed to find eWoms
# This macro should be invoked by every module which depends on ewoms, but
# not by ewoms itself
AC_DEFUN([EWOMS_CHECK_MODULE],
[
  EWOMS_CHECK_MODULES([ewoms],[ewoms/common/exceptions.hh])
])
